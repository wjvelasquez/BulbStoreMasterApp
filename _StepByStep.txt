Shared:
	se crean los modelos


server:
	-agregar referencias nuget:
		Microsoft.EntityFrameworkCore
		Microsoft.EntityFrameworkCore.Design
		Microsoft.EntityFrameworkCore.SqlServer
		Microsoft.EntityFrameworkCore.Sqlite
		Swashbuckle.AspNetCore

	-appsetting: 
		cadena de conexion
	
	-Data\DataContext.cs : esta clase hereda de DbContext
		se agregan los DbSet

	-program.cs: 
		se configura Swagger
			//wv
			builder.Services.AddEndpointsApiExplorer();
			builder.Services.AddSwaggerGen();

			en el if
			if (app.Environment.IsDevelopment())
			{
				.
				.
				.
				//wv
				app.UseSwagger();
				app.UseSwaggerUI();
			}

		se agrega el AddDbContext
		global using Microsoft.EntityFrameworkCore;
		global using BulbStoreMaster.Server.Data;
		global using BulbStoreMaster.Shared;
		*se colocan global para usarlas en todo el proyecto


	-Controllers\BulbController
		se injecta DataContext en el constructor 

		se crean los controles

Se crean las migraciones para poder crear la bse de datos
	estando en la carpeta Server
	- dotnet ef migrations add Create
	- dotnet ef database update

En este punto ya esta listo el servidor y la API. Lo Probamos

Client:
	creamos los servicios
	Services\
		BulbServices\
			IBulbService
			BulbService :IBulbService

			impletamos la intefaz
			inyectamos HttpClient en el constructor
			creamos los servicios

	Program.cs
		registramos el servicio

	Pages\
		creamos las paginas que van a mostrar los bombillos y la edicion
		Bulbs\
			Bulbs.razor
				@page  "/Bulbs"
				@inject IBulbService bulbService
